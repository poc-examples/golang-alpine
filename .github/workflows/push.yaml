name: Trigger on push

on:
  push:
    paths-ignore:
      - '.tekton/**'
      - 'pipelines/**'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Auth JWT
        id: get-jwt
        env:
          AUTH_URL: ${{ secrets.AUTH_URL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          RESPONSE=$(curl -s -X POST ${AUTH_URL} \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&grant_type=client_credentials")

          TOKEN=$(echo "${RESPONSE}" | jq -r '.access_token')
          echo "::set-output name=jwt_token::${TOKEN}"

      - name: Trigger the Payload
        id: payload
        env:
          TEKTON_API_URL: ${{ secrets.TEKTON_API_URL }}
          JWT_TOKEN: ${{ steps.get-jwt.outputs.jwt_token }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
        run: |
          echo "::add-mask::${{ toJson(github.event) }}"
          PAYLOAD=$(jq --null-input \
            --argjson event "$(jq -c '.' <<< '${{ toJson(github.event) }}')" \
            --arg jwt "$JWT_TOKEN" '$event + {jwt_token: $jwt}' 2>/dev/null)

          # Mask the payload to hide sensitive data in logs
          # echo "::add-mask::$PAYLOAD"

          curl -s -X POST ${WEBHOOK_URL} \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Event: push" \
            -d "$PAYLOAD"

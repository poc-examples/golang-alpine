name: Trigger on push

on:
  push:
    paths-ignore:
      - '.tekton/**'
      - 'pipelines/**'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Call GitHub API
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X GET -H "Authorization: Bearer $TOKEN" https://api.github.com/repos/${{ github.repository }}

      # - name: Auth OpenShift 
      #   env:
      #     TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      - name: Authenticate with OpenShift
        env:
          OIDC_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -v -X POST https://oauth-openshift.apps.quay-demo-2.ot31.p1.openshiftapps.com/oauth/token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=device_code&code=$OIDC_TOKEN&client_id=Ov23ligI7Qs9mfLN9wVu&client_secret=40abf6bf33869ab319f768549aa2f5c74df50ef4"

      - name: Get Auth JWT
        id: get-jwt
        env:
          AUTH_URL: ${{ secrets.AUTH_URL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          RESPONSE=$(curl -s -X POST ${AUTH_URL} \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&grant_type=client_credentials")

          TOKEN=$(echo "${RESPONSE}" | jq -r '.access_token')
          echo "::set-output name=jwt_token::${TOKEN}"

      - name: Trigger the Payload
        id: payload
        env:
          TEKTON_API_URL: ${{ secrets.TEKTON_API_URL }}
          JWT_TOKEN: ${{ steps.get-jwt.outputs.jwt_token }}
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          EVENT: '${{ toJson(github.event) }}'
        run: |
          curl -s -X POST ${WEBHOOK_URL} \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Event: push" \
            -H "JWT-Token: $JWT_TOKEN" \
            -d "$EVENT"
 